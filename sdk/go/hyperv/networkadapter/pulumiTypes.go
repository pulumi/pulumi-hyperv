// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkadapter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-hyperv-provider/provider/go/hyperv/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NetworkAdapterInputs struct {
	// The command to run on create.
	Create *string `pulumi:"create"`
	// The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
	// and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
	// Command resource from previous create or update steps.
	Delete *string `pulumi:"delete"`
	// Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
	DhcpGuard *bool `pulumi:"dhcpGuard"`
	// Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
	IeeePriorityTag *bool `pulumi:"ieeePriorityTag"`
	// Comma-separated list of IP addresses to assign to the network adapter.
	IpAddresses *string `pulumi:"ipAddresses"`
	// MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
	MacAddress *string `pulumi:"macAddress"`
	// Name of the network adapter
	Name string `pulumi:"name"`
	// Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
	PortMirroring *string `pulumi:"portMirroring"`
	// Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
	RouterGuard *bool `pulumi:"routerGuard"`
	// Name of the virtual switch to connect the network adapter to
	SwitchName string `pulumi:"switchName"`
	// Trigger a resource replacement on changes to any of these values. The
	// trigger values can be of any type. If a value is different in the current update compared to the
	// previous update, the resource will be replaced, i.e., the "create" command will be re-run.
	// Please see the resource documentation for examples.
	Triggers []interface{} `pulumi:"triggers"`
	// The command to run on update, if empty, create will
	// run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
	// are set to the stdout and stderr properties of the Command resource from previous
	// create or update steps.
	Update *string `pulumi:"update"`
	// VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
	VlanId *int `pulumi:"vlanId"`
	// Name of the virtual machine to attach the network adapter to
	VmName *string `pulumi:"vmName"`
	// VMQ weight for the network adapter. A value of 0 disables VMQ.
	VmqWeight *int `pulumi:"vmqWeight"`
}

// NetworkAdapterInputsInput is an input type that accepts NetworkAdapterInputsArgs and NetworkAdapterInputsOutput values.
// You can construct a concrete instance of `NetworkAdapterInputsInput` via:
//
//	NetworkAdapterInputsArgs{...}
type NetworkAdapterInputsInput interface {
	pulumi.Input

	ToNetworkAdapterInputsOutput() NetworkAdapterInputsOutput
	ToNetworkAdapterInputsOutputWithContext(context.Context) NetworkAdapterInputsOutput
}

type NetworkAdapterInputsArgs struct {
	// The command to run on create.
	Create pulumi.StringPtrInput `pulumi:"create"`
	// The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
	// and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
	// Command resource from previous create or update steps.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
	DhcpGuard pulumi.BoolPtrInput `pulumi:"dhcpGuard"`
	// Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
	IeeePriorityTag pulumi.BoolPtrInput `pulumi:"ieeePriorityTag"`
	// Comma-separated list of IP addresses to assign to the network adapter.
	IpAddresses pulumi.StringPtrInput `pulumi:"ipAddresses"`
	// MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// Name of the network adapter
	Name pulumi.StringInput `pulumi:"name"`
	// Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
	PortMirroring pulumi.StringPtrInput `pulumi:"portMirroring"`
	// Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
	RouterGuard pulumi.BoolPtrInput `pulumi:"routerGuard"`
	// Name of the virtual switch to connect the network adapter to
	SwitchName pulumi.StringInput `pulumi:"switchName"`
	// Trigger a resource replacement on changes to any of these values. The
	// trigger values can be of any type. If a value is different in the current update compared to the
	// previous update, the resource will be replaced, i.e., the "create" command will be re-run.
	// Please see the resource documentation for examples.
	Triggers pulumi.ArrayInput `pulumi:"triggers"`
	// The command to run on update, if empty, create will
	// run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
	// are set to the stdout and stderr properties of the Command resource from previous
	// create or update steps.
	Update pulumi.StringPtrInput `pulumi:"update"`
	// VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
	// Name of the virtual machine to attach the network adapter to
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
	// VMQ weight for the network adapter. A value of 0 disables VMQ.
	VmqWeight pulumi.IntPtrInput `pulumi:"vmqWeight"`
}

func (NetworkAdapterInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAdapterInputs)(nil)).Elem()
}

func (i NetworkAdapterInputsArgs) ToNetworkAdapterInputsOutput() NetworkAdapterInputsOutput {
	return i.ToNetworkAdapterInputsOutputWithContext(context.Background())
}

func (i NetworkAdapterInputsArgs) ToNetworkAdapterInputsOutputWithContext(ctx context.Context) NetworkAdapterInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAdapterInputsOutput)
}

// NetworkAdapterInputsArrayInput is an input type that accepts NetworkAdapterInputsArray and NetworkAdapterInputsArrayOutput values.
// You can construct a concrete instance of `NetworkAdapterInputsArrayInput` via:
//
//	NetworkAdapterInputsArray{ NetworkAdapterInputsArgs{...} }
type NetworkAdapterInputsArrayInput interface {
	pulumi.Input

	ToNetworkAdapterInputsArrayOutput() NetworkAdapterInputsArrayOutput
	ToNetworkAdapterInputsArrayOutputWithContext(context.Context) NetworkAdapterInputsArrayOutput
}

type NetworkAdapterInputsArray []NetworkAdapterInputsInput

func (NetworkAdapterInputsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAdapterInputs)(nil)).Elem()
}

func (i NetworkAdapterInputsArray) ToNetworkAdapterInputsArrayOutput() NetworkAdapterInputsArrayOutput {
	return i.ToNetworkAdapterInputsArrayOutputWithContext(context.Background())
}

func (i NetworkAdapterInputsArray) ToNetworkAdapterInputsArrayOutputWithContext(ctx context.Context) NetworkAdapterInputsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAdapterInputsArrayOutput)
}

type NetworkAdapterInputsOutput struct{ *pulumi.OutputState }

func (NetworkAdapterInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAdapterInputs)(nil)).Elem()
}

func (o NetworkAdapterInputsOutput) ToNetworkAdapterInputsOutput() NetworkAdapterInputsOutput {
	return o
}

func (o NetworkAdapterInputsOutput) ToNetworkAdapterInputsOutputWithContext(ctx context.Context) NetworkAdapterInputsOutput {
	return o
}

// The command to run on create.
func (o NetworkAdapterInputsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
// and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
// Command resource from previous create or update steps.
func (o NetworkAdapterInputsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
func (o NetworkAdapterInputsOutput) DhcpGuard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *bool { return v.DhcpGuard }).(pulumi.BoolPtrOutput)
}

// Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
func (o NetworkAdapterInputsOutput) IeeePriorityTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *bool { return v.IeeePriorityTag }).(pulumi.BoolPtrOutput)
}

// Comma-separated list of IP addresses to assign to the network adapter.
func (o NetworkAdapterInputsOutput) IpAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.IpAddresses }).(pulumi.StringPtrOutput)
}

// MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
func (o NetworkAdapterInputsOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Name of the network adapter
func (o NetworkAdapterInputsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) string { return v.Name }).(pulumi.StringOutput)
}

// Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
func (o NetworkAdapterInputsOutput) PortMirroring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.PortMirroring }).(pulumi.StringPtrOutput)
}

// Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
func (o NetworkAdapterInputsOutput) RouterGuard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *bool { return v.RouterGuard }).(pulumi.BoolPtrOutput)
}

// Name of the virtual switch to connect the network adapter to
func (o NetworkAdapterInputsOutput) SwitchName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) string { return v.SwitchName }).(pulumi.StringOutput)
}

// Trigger a resource replacement on changes to any of these values. The
// trigger values can be of any type. If a value is different in the current update compared to the
// previous update, the resource will be replaced, i.e., the "create" command will be re-run.
// Please see the resource documentation for examples.
func (o NetworkAdapterInputsOutput) Triggers() pulumi.ArrayOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) []interface{} { return v.Triggers }).(pulumi.ArrayOutput)
}

// The command to run on update, if empty, create will
// run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
// are set to the stdout and stderr properties of the Command resource from previous
// create or update steps.
func (o NetworkAdapterInputsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.Update }).(pulumi.StringPtrOutput)
}

// VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
func (o NetworkAdapterInputsOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

// Name of the virtual machine to attach the network adapter to
func (o NetworkAdapterInputsOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

// VMQ weight for the network adapter. A value of 0 disables VMQ.
func (o NetworkAdapterInputsOutput) VmqWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAdapterInputs) *int { return v.VmqWeight }).(pulumi.IntPtrOutput)
}

type NetworkAdapterInputsArrayOutput struct{ *pulumi.OutputState }

func (NetworkAdapterInputsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAdapterInputs)(nil)).Elem()
}

func (o NetworkAdapterInputsArrayOutput) ToNetworkAdapterInputsArrayOutput() NetworkAdapterInputsArrayOutput {
	return o
}

func (o NetworkAdapterInputsArrayOutput) ToNetworkAdapterInputsArrayOutputWithContext(ctx context.Context) NetworkAdapterInputsArrayOutput {
	return o
}

func (o NetworkAdapterInputsArrayOutput) Index(i pulumi.IntInput) NetworkAdapterInputsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAdapterInputs {
		return vs[0].([]NetworkAdapterInputs)[vs[1].(int)]
	}).(NetworkAdapterInputsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAdapterInputsInput)(nil)).Elem(), NetworkAdapterInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAdapterInputsArrayInput)(nil)).Elem(), NetworkAdapterInputsArray{})
	pulumi.RegisterOutputType(NetworkAdapterInputsOutput{})
	pulumi.RegisterOutputType(NetworkAdapterInputsArrayOutput{})
}
