// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hyperv.machine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class HardDriveInput {
    private Integer controllerLocation;
    private Integer controllerNumber;
    private String controllerType;
    private String path;

    private HardDriveInput() {}
    public Integer controllerLocation() {
        return this.controllerLocation;
    }
    public Integer controllerNumber() {
        return this.controllerNumber;
    }
    public String controllerType() {
        return this.controllerType;
    }
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HardDriveInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer controllerLocation;
        private Integer controllerNumber;
        private String controllerType;
        private String path;
        public Builder() {}
        public Builder(HardDriveInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controllerLocation = defaults.controllerLocation;
    	      this.controllerNumber = defaults.controllerNumber;
    	      this.controllerType = defaults.controllerType;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder controllerLocation(Integer controllerLocation) {
            if (controllerLocation == null) {
              throw new MissingRequiredPropertyException("HardDriveInput", "controllerLocation");
            }
            this.controllerLocation = controllerLocation;
            return this;
        }
        @CustomType.Setter
        public Builder controllerNumber(Integer controllerNumber) {
            if (controllerNumber == null) {
              throw new MissingRequiredPropertyException("HardDriveInput", "controllerNumber");
            }
            this.controllerNumber = controllerNumber;
            return this;
        }
        @CustomType.Setter
        public Builder controllerType(String controllerType) {
            if (controllerType == null) {
              throw new MissingRequiredPropertyException("HardDriveInput", "controllerType");
            }
            this.controllerType = controllerType;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("HardDriveInput", "path");
            }
            this.path = path;
            return this;
        }
        public HardDriveInput build() {
            final var _resultValue = new HardDriveInput();
            _resultValue.controllerLocation = controllerLocation;
            _resultValue.controllerNumber = controllerNumber;
            _resultValue.controllerType = controllerType;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
