// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hyperv.networkadapter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.hyperv.Utilities;
import com.pulumi.hyperv.networkadapter.NetworkAdapterArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * # Network Adapter Resource
 * 
 * The Network Adapter resource allows you to create and manage network adapters for virtual machines in Hyper-V.
 * 
 * ## Example Usage
 * 
 * ### Standalone Network Adapter
 * 
 * ### Using the NetworkAdapters Property in Machine Resource
 * 
 * You can also define network adapters directly in the Machine resource using the `networkAdapters` property:
 * 
 * ## Input Properties
 * 
 * | Property         | Type     | Required | Description |
 * |------------------|----------|----------|-------------|
 * | name             | string   | Yes      | Name of the network adapter |
 * | vmName           | string   | Yes      | Name of the virtual machine to attach the network adapter to |
 * | switchName       | string   | Yes      | Name of the virtual switch to connect the network adapter to |
 * | macAddress       | string   | No       | MAC address for the network adapter. If not specified, a dynamic MAC address will be generated |
 * | vlanId           | number   | No       | VLAN ID for the network adapter. If not specified, no VLAN tagging is used |
 * | dhcpGuard        | boolean  | No       | Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages |
 * | routerGuard      | boolean  | No       | Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages |
 * | portMirroring    | string   | No       | Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None |
 * | ieeePriorityTag  | boolean  | No       | Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value |
 * | vmqWeight        | number   | No       | VMQ weight for the network adapter. A value of 0 disables VMQ |
 * | ipAddresses      | string   | No       | Comma-separated list of IP addresses to assign to the network adapter |
 * 
 * ## Output Properties
 * 
 * | Property         | Type     | Description |
 * |------------------|----------|-------------|
 * | adapterId        | string   | The ID of the network adapter |
 * 
 * ## Lifecycle Management
 * 
 * - **Create**: Creates a new network adapter and attaches it to the specified virtual machine.
 * - **Read**: Reads the properties of an existing network adapter.
 * - **Update**: Updates the properties of an existing network adapter.
 * - **Delete**: Removes a network adapter from a virtual machine.
 * 
 * ## Notes
 * 
 * - The network adapter creation will fail if the virtual machine or virtual switch does not exist.
 * - Dynamic MAC addresses are automatically generated if not specified.
 * - IP addresses are specified as a comma-separated string (e.g., &#34;192.168.1.10,192.168.1.11&#34;).
 * - When updating a network adapter, the virtual machine may need to be powered off depending on the properties being changed.
 * 
 */
@ResourceType(type="hyperv:networkadapter:NetworkAdapter")
public class NetworkAdapter extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the network adapter
     * 
     */
    @Export(name="adapterId", refs={String.class}, tree="[0]")
    private Output<String> adapterId;

    /**
     * @return The ID of the network adapter
     * 
     */
    public Output<String> adapterId() {
        return this.adapterId;
    }
    /**
     * The command to run on create.
     * 
     */
    @Export(name="create", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> create;

    /**
     * @return The command to run on create.
     * 
     */
    public Output<Optional<String>> create() {
        return Codegen.optional(this.create);
    }
    /**
     * The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
     * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
     * Command resource from previous create or update steps.
     * 
     */
    @Export(name="delete", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> delete;

    /**
     * @return The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
     * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
     * Command resource from previous create or update steps.
     * 
     */
    public Output<Optional<String>> delete() {
        return Codegen.optional(this.delete);
    }
    /**
     * Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
     * 
     */
    @Export(name="dhcpGuard", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dhcpGuard;

    /**
     * @return Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
     * 
     */
    public Output<Optional<Boolean>> dhcpGuard() {
        return Codegen.optional(this.dhcpGuard);
    }
    /**
     * Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
     * 
     */
    @Export(name="ieeePriorityTag", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ieeePriorityTag;

    /**
     * @return Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
     * 
     */
    public Output<Optional<Boolean>> ieeePriorityTag() {
        return Codegen.optional(this.ieeePriorityTag);
    }
    /**
     * Comma-separated list of IP addresses to assign to the network adapter.
     * 
     */
    @Export(name="ipAddresses", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipAddresses;

    /**
     * @return Comma-separated list of IP addresses to assign to the network adapter.
     * 
     */
    public Output<Optional<String>> ipAddresses() {
        return Codegen.optional(this.ipAddresses);
    }
    /**
     * MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
     * 
     */
    @Export(name="macAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> macAddress;

    /**
     * @return MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
     * 
     */
    public Output<Optional<String>> macAddress() {
        return Codegen.optional(this.macAddress);
    }
    /**
     * Name of the network adapter
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the network adapter
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
     * 
     */
    @Export(name="portMirroring", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> portMirroring;

    /**
     * @return Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
     * 
     */
    public Output<Optional<String>> portMirroring() {
        return Codegen.optional(this.portMirroring);
    }
    /**
     * Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
     * 
     */
    @Export(name="routerGuard", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> routerGuard;

    /**
     * @return Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
     * 
     */
    public Output<Optional<Boolean>> routerGuard() {
        return Codegen.optional(this.routerGuard);
    }
    /**
     * Name of the virtual switch to connect the network adapter to
     * 
     */
    @Export(name="switchName", refs={String.class}, tree="[0]")
    private Output<String> switchName;

    /**
     * @return Name of the virtual switch to connect the network adapter to
     * 
     */
    public Output<String> switchName() {
        return this.switchName;
    }
    /**
     * Trigger a resource replacement on changes to any of these values. The
     * trigger values can be of any type. If a value is different in the current update compared to the
     * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
     * Please see the resource documentation for examples.
     * 
     */
    @Export(name="triggers", refs={List.class,Object.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Object>> triggers;

    /**
     * @return Trigger a resource replacement on changes to any of these values. The
     * trigger values can be of any type. If a value is different in the current update compared to the
     * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
     * Please see the resource documentation for examples.
     * 
     */
    public Output<Optional<List<Object>>> triggers() {
        return Codegen.optional(this.triggers);
    }
    /**
     * The command to run on update, if empty, create will
     * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
     * are set to the stdout and stderr properties of the Command resource from previous
     * create or update steps.
     * 
     */
    @Export(name="update", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> update;

    /**
     * @return The command to run on update, if empty, create will
     * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
     * are set to the stdout and stderr properties of the Command resource from previous
     * create or update steps.
     * 
     */
    public Output<Optional<String>> update() {
        return Codegen.optional(this.update);
    }
    /**
     * VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
     * 
     */
    @Export(name="vlanId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vlanId;

    /**
     * @return VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
     * 
     */
    public Output<Optional<Integer>> vlanId() {
        return Codegen.optional(this.vlanId);
    }
    /**
     * Name of the virtual machine to attach the network adapter to
     * 
     */
    @Export(name="vmName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vmName;

    /**
     * @return Name of the virtual machine to attach the network adapter to
     * 
     */
    public Output<Optional<String>> vmName() {
        return Codegen.optional(this.vmName);
    }
    /**
     * VMQ weight for the network adapter. A value of 0 disables VMQ.
     * 
     */
    @Export(name="vmqWeight", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vmqWeight;

    /**
     * @return VMQ weight for the network adapter. A value of 0 disables VMQ.
     * 
     */
    public Output<Optional<Integer>> vmqWeight() {
        return Codegen.optional(this.vmqWeight);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkAdapter(java.lang.String name) {
        this(name, NetworkAdapterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkAdapter(java.lang.String name, NetworkAdapterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkAdapter(java.lang.String name, NetworkAdapterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("hyperv:networkadapter:NetworkAdapter", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetworkAdapter(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("hyperv:networkadapter:NetworkAdapter", name, null, makeResourceOptions(options, id), false);
    }

    private static NetworkAdapterArgs makeArgs(NetworkAdapterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkAdapterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkAdapter get(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkAdapter(name, id, options);
    }
}
