// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hyperv.machine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.hyperv.Utilities;
import com.pulumi.hyperv.machine.MachineArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * # Hyper-V Virtual Machine Management Service (VMMS)
 * 
 * ## Overview
 * 
 * The Virtual Machine Management Service (VMMS) is a core component of Hyper-V that manages virtual machine operations on a Windows Server or Windows Client system. This document provides information about the VMMS as implemented in the Pulumi Hyper-V provider.
 * 
 * ## Features
 * 
 * - Virtual machine lifecycle management (create, start, stop, pause, resume, delete)
 * - Resource allocation and monitoring
 * - Snapshot management
 * - Virtual device configuration
 * 
 * ## Implementation Details in Pulumi
 * 
 * ### Virtual Machine Creation
 * 
 * The `Create` method in the `vmController` is responsible for creating a virtual machine. It performs the following steps:
 * 
 * 1. **Generate a Unique ID**: A unique ID is generated for the virtual machine.
 * 2. **Default Values**:
 *    - Memory size defaults to `1024 MB` if not specified.
 *    - Processor count defaults to `1` if not specified.
 * 3. **VMMS Client Initialization**: A VMMS client is created to interact with the Hyper-V host.
 * 4. **Virtual Machine Settings**:
 *    - The virtual machine is configured with `Hyper-V Generation 2`.
 *    - Memory and processor settings are applied based on the provided or default values.
 * 5. **Virtual Machine Creation**: The virtual machine is created using the configured settings.
 * 
 * ### Read Method
 * 
 * The `Read` method is a no-op in the current implementation. It does not perform any operations and always returns an empty state.
 * 
 * ### Update Method
 * 
 * The `Update` method:
 * 
 * - Updates the virtual machine state if an `Update` command is provided.
 * - Falls back to the `Create` command if no `Update` command is specified.
 * - Does nothing if neither command is provided.
 * 
 * ### Delete Method
 * 
 * The `Delete` method is a no-op unless a `Delete` command is explicitly specified.
 * 
 * ### Resource Replacement with Triggers
 * 
 * The Machine resource supports the `triggers` property which forces resource replacement when values change. When any value in the `triggers` array changes between updates, the resource will be replaced (destroyed and recreated) rather than updated in-place.
 * 
 * ## Available Properties
 * 
 * The Machine resource supports the following properties:
 * 
 * | Property | Type | Description | Default |
 * |----------|------|-------------|---------|
 * | `machineName` | string | Name of the Virtual Machine | (required) |
 * | `processorCount` | int | Number of processors to allocate | 1 |
 * | `memorySize` | int | Memory size in MB | 1024 |
 * | `create` | string | Command to run on create | (optional) |
 * | `update` | string | Command to run on update (falls back to create command if not specified) | (optional) |
 * | `delete` | string | Command to run on delete | (optional) |
 * | `triggers` | array | Values that trigger resource replacement when changed | (optional) |
 * 
 * ## Default Behavior
 * 
 * - Outputs depend on all inputs by default.
 * - No explicit dependency wiring is required.
 * 
 * ## Usage in Pulumi
 * 
 * When using the Pulumi Hyper-V provider, the VMMS is accessed indirectly through the `Machine` resource type.
 * 
 * ## Authentication and Security
 * 
 * The VMMS requires appropriate permissions to manage Hyper-V objects. When using the Pulumi Hyper-V provider, ensure that:
 * 
 * 1. The user running Pulumi commands has administrative privileges on the Hyper-V host.
 * 2. Required firewall rules are configured if managing a remote Hyper-V host.
 * 3. Proper credentials are provided when connecting to remote systems.
 * 
 * ## Related Documentation
 * 
 * - [Microsoft Hyper-V Documentation](https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/hyper-v-on-windows-server)
 * - [Pulumi Hyper-V Provider Documentation](https://www.pulumi.com/registry/packages/hyperv/)
 * 
 */
@ResourceType(type="hyperv:machine:Machine")
public class Machine extends com.pulumi.resources.CustomResource {
    /**
     * The command to run on create.
     * 
     */
    @Export(name="create", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> create;

    /**
     * @return The command to run on create.
     * 
     */
    public Output<Optional<String>> create() {
        return Codegen.optional(this.create);
    }
    /**
     * The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
     * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
     * Command resource from previous create or update steps.
     * 
     */
    @Export(name="delete", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> delete;

    /**
     * @return The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
     * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
     * Command resource from previous create or update steps.
     * 
     */
    public Output<Optional<String>> delete() {
        return Codegen.optional(this.delete);
    }
    /**
     * Generation of the Virtual Machine. Defaults to 2.
     * 
     */
    @Export(name="generation", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> generation;

    /**
     * @return Generation of the Virtual Machine. Defaults to 2.
     * 
     */
    public Output<Optional<Integer>> generation() {
        return Codegen.optional(this.generation);
    }
    /**
     * Name of the Virtual Machine
     * 
     */
    @Export(name="machineName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> machineName;

    /**
     * @return Name of the Virtual Machine
     * 
     */
    public Output<Optional<String>> machineName() {
        return Codegen.optional(this.machineName);
    }
    /**
     * Amount of memory to allocate to the Virtual Machine in MB. Defaults to 1024.
     * 
     */
    @Export(name="memorySize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> memorySize;

    /**
     * @return Amount of memory to allocate to the Virtual Machine in MB. Defaults to 1024.
     * 
     */
    public Output<Optional<Integer>> memorySize() {
        return Codegen.optional(this.memorySize);
    }
    /**
     * Number of processors to allocate to the Virtual Machine. Defaults to 1.
     * 
     */
    @Export(name="processorCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> processorCount;

    /**
     * @return Number of processors to allocate to the Virtual Machine. Defaults to 1.
     * 
     */
    public Output<Optional<Integer>> processorCount() {
        return Codegen.optional(this.processorCount);
    }
    /**
     * Trigger a resource replacement on changes to any of these values. The
     * trigger values can be of any type. If a value is different in the current update compared to the
     * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
     * Please see the resource documentation for examples.
     * 
     */
    @Export(name="triggers", refs={List.class,Object.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Object>> triggers;

    /**
     * @return Trigger a resource replacement on changes to any of these values. The
     * trigger values can be of any type. If a value is different in the current update compared to the
     * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
     * Please see the resource documentation for examples.
     * 
     */
    public Output<Optional<List<Object>>> triggers() {
        return Codegen.optional(this.triggers);
    }
    /**
     * The command to run on update, if empty, create will
     * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
     * are set to the stdout and stderr properties of the Command resource from previous
     * create or update steps.
     * 
     */
    @Export(name="update", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> update;

    /**
     * @return The command to run on update, if empty, create will
     * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
     * are set to the stdout and stderr properties of the Command resource from previous
     * create or update steps.
     * 
     */
    public Output<Optional<String>> update() {
        return Codegen.optional(this.update);
    }
    @Export(name="vmId", refs={String.class}, tree="[0]")
    private Output<String> vmId;

    public Output<String> vmId() {
        return this.vmId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Machine(java.lang.String name) {
        this(name, MachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Machine(java.lang.String name, @Nullable MachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Machine(java.lang.String name, @Nullable MachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("hyperv:machine:Machine", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Machine(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("hyperv:machine:Machine", name, null, makeResourceOptions(options, id), false);
    }

    private static MachineArgs makeArgs(@Nullable MachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MachineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Machine get(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Machine(name, id, options);
    }
}
