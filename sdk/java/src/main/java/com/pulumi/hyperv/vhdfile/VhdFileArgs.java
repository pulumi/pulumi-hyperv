// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hyperv.vhdfile;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VhdFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final VhdFileArgs Empty = new VhdFileArgs();

    /**
     * Block size of the VHD file in bytes. Recommended value is 1MB (1048576 bytes) for better compatibility.
     * 
     */
    @Import(name="blockSize")
    private @Nullable Output<Integer> blockSize;

    /**
     * @return Block size of the VHD file in bytes. Recommended value is 1MB (1048576 bytes) for better compatibility.
     * 
     */
    public Optional<Output<Integer>> blockSize() {
        return Optional.ofNullable(this.blockSize);
    }

    /**
     * The command to run on create.
     * 
     */
    @Import(name="create")
    private @Nullable Output<String> create;

    /**
     * @return The command to run on create.
     * 
     */
    public Optional<Output<String>> create() {
        return Optional.ofNullable(this.create);
    }

    /**
     * The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
     * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
     * Command resource from previous create or update steps.
     * 
     */
    @Import(name="delete")
    private @Nullable Output<String> delete;

    /**
     * @return The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
     * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
     * Command resource from previous create or update steps.
     * 
     */
    public Optional<Output<String>> delete() {
        return Optional.ofNullable(this.delete);
    }

    /**
     * Type of the VHD file (Fixed, Dynamic, or Differencing)
     * 
     */
    @Import(name="diskType")
    private @Nullable Output<String> diskType;

    /**
     * @return Type of the VHD file (Fixed, Dynamic, or Differencing)
     * 
     */
    public Optional<Output<String>> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    /**
     * Path to the parent VHD file when creating a differencing disk
     * 
     */
    @Import(name="parentPath")
    private @Nullable Output<String> parentPath;

    /**
     * @return Path to the parent VHD file when creating a differencing disk
     * 
     */
    public Optional<Output<String>> parentPath() {
        return Optional.ofNullable(this.parentPath);
    }

    /**
     * Path to the VHD file
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Path to the VHD file
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    /**
     * Size of the VHD file in bytes
     * 
     */
    @Import(name="sizeBytes")
    private @Nullable Output<Integer> sizeBytes;

    /**
     * @return Size of the VHD file in bytes
     * 
     */
    public Optional<Output<Integer>> sizeBytes() {
        return Optional.ofNullable(this.sizeBytes);
    }

    /**
     * Trigger a resource replacement on changes to any of these values. The
     * trigger values can be of any type. If a value is different in the current update compared to the
     * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
     * Please see the resource documentation for examples.
     * 
     */
    @Import(name="triggers")
    private @Nullable Output<List<Object>> triggers;

    /**
     * @return Trigger a resource replacement on changes to any of these values. The
     * trigger values can be of any type. If a value is different in the current update compared to the
     * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
     * Please see the resource documentation for examples.
     * 
     */
    public Optional<Output<List<Object>>> triggers() {
        return Optional.ofNullable(this.triggers);
    }

    /**
     * The command to run on update, if empty, create will
     * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
     * are set to the stdout and stderr properties of the Command resource from previous
     * create or update steps.
     * 
     */
    @Import(name="update")
    private @Nullable Output<String> update;

    /**
     * @return The command to run on update, if empty, create will
     * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
     * are set to the stdout and stderr properties of the Command resource from previous
     * create or update steps.
     * 
     */
    public Optional<Output<String>> update() {
        return Optional.ofNullable(this.update);
    }

    private VhdFileArgs() {}

    private VhdFileArgs(VhdFileArgs $) {
        this.blockSize = $.blockSize;
        this.create = $.create;
        this.delete = $.delete;
        this.diskType = $.diskType;
        this.parentPath = $.parentPath;
        this.path = $.path;
        this.sizeBytes = $.sizeBytes;
        this.triggers = $.triggers;
        this.update = $.update;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VhdFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VhdFileArgs $;

        public Builder() {
            $ = new VhdFileArgs();
        }

        public Builder(VhdFileArgs defaults) {
            $ = new VhdFileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blockSize Block size of the VHD file in bytes. Recommended value is 1MB (1048576 bytes) for better compatibility.
         * 
         * @return builder
         * 
         */
        public Builder blockSize(@Nullable Output<Integer> blockSize) {
            $.blockSize = blockSize;
            return this;
        }

        /**
         * @param blockSize Block size of the VHD file in bytes. Recommended value is 1MB (1048576 bytes) for better compatibility.
         * 
         * @return builder
         * 
         */
        public Builder blockSize(Integer blockSize) {
            return blockSize(Output.of(blockSize));
        }

        /**
         * @param create The command to run on create.
         * 
         * @return builder
         * 
         */
        public Builder create(@Nullable Output<String> create) {
            $.create = create;
            return this;
        }

        /**
         * @param create The command to run on create.
         * 
         * @return builder
         * 
         */
        public Builder create(String create) {
            return create(Output.of(create));
        }

        /**
         * @param delete The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
         * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
         * Command resource from previous create or update steps.
         * 
         * @return builder
         * 
         */
        public Builder delete(@Nullable Output<String> delete) {
            $.delete = delete;
            return this;
        }

        /**
         * @param delete The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
         * and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
         * Command resource from previous create or update steps.
         * 
         * @return builder
         * 
         */
        public Builder delete(String delete) {
            return delete(Output.of(delete));
        }

        /**
         * @param diskType Type of the VHD file (Fixed, Dynamic, or Differencing)
         * 
         * @return builder
         * 
         */
        public Builder diskType(@Nullable Output<String> diskType) {
            $.diskType = diskType;
            return this;
        }

        /**
         * @param diskType Type of the VHD file (Fixed, Dynamic, or Differencing)
         * 
         * @return builder
         * 
         */
        public Builder diskType(String diskType) {
            return diskType(Output.of(diskType));
        }

        /**
         * @param parentPath Path to the parent VHD file when creating a differencing disk
         * 
         * @return builder
         * 
         */
        public Builder parentPath(@Nullable Output<String> parentPath) {
            $.parentPath = parentPath;
            return this;
        }

        /**
         * @param parentPath Path to the parent VHD file when creating a differencing disk
         * 
         * @return builder
         * 
         */
        public Builder parentPath(String parentPath) {
            return parentPath(Output.of(parentPath));
        }

        /**
         * @param path Path to the VHD file
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to the VHD file
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param sizeBytes Size of the VHD file in bytes
         * 
         * @return builder
         * 
         */
        public Builder sizeBytes(@Nullable Output<Integer> sizeBytes) {
            $.sizeBytes = sizeBytes;
            return this;
        }

        /**
         * @param sizeBytes Size of the VHD file in bytes
         * 
         * @return builder
         * 
         */
        public Builder sizeBytes(Integer sizeBytes) {
            return sizeBytes(Output.of(sizeBytes));
        }

        /**
         * @param triggers Trigger a resource replacement on changes to any of these values. The
         * trigger values can be of any type. If a value is different in the current update compared to the
         * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
         * Please see the resource documentation for examples.
         * 
         * @return builder
         * 
         */
        public Builder triggers(@Nullable Output<List<Object>> triggers) {
            $.triggers = triggers;
            return this;
        }

        /**
         * @param triggers Trigger a resource replacement on changes to any of these values. The
         * trigger values can be of any type. If a value is different in the current update compared to the
         * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
         * Please see the resource documentation for examples.
         * 
         * @return builder
         * 
         */
        public Builder triggers(List<Object> triggers) {
            return triggers(Output.of(triggers));
        }

        /**
         * @param triggers Trigger a resource replacement on changes to any of these values. The
         * trigger values can be of any type. If a value is different in the current update compared to the
         * previous update, the resource will be replaced, i.e., the &#34;create&#34; command will be re-run.
         * Please see the resource documentation for examples.
         * 
         * @return builder
         * 
         */
        public Builder triggers(Object... triggers) {
            return triggers(List.of(triggers));
        }

        /**
         * @param update The command to run on update, if empty, create will
         * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
         * are set to the stdout and stderr properties of the Command resource from previous
         * create or update steps.
         * 
         * @return builder
         * 
         */
        public Builder update(@Nullable Output<String> update) {
            $.update = update;
            return this;
        }

        /**
         * @param update The command to run on update, if empty, create will
         * run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR
         * are set to the stdout and stderr properties of the Command resource from previous
         * create or update steps.
         * 
         * @return builder
         * 
         */
        public Builder update(String update) {
            return update(Output.of(update));
        }

        public VhdFileArgs build() {
            if ($.path == null) {
                throw new MissingRequiredPropertyException("VhdFileArgs", "path");
            }
            return $;
        }
    }

}
