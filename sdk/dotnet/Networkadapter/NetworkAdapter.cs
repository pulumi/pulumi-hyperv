// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hyperv.Networkadapter
{
    /// <summary>
    /// # Network Adapter Resource
    /// 
    /// The Network Adapter resource allows you to create and manage network adapters for virtual machines in Hyper-V.
    /// 
    /// ## Example Usage
    /// 
    /// ## Input Properties
    /// 
    /// | Property         | Type     | Required | Description |
    /// |------------------|----------|----------|-------------|
    /// | name             | string   | Yes      | Name of the network adapter |
    /// | vmName           | string   | Yes      | Name of the virtual machine to attach the network adapter to |
    /// | switchName       | string   | Yes      | Name of the virtual switch to connect the network adapter to |
    /// | macAddress       | string   | No       | MAC address for the network adapter. If not specified, a dynamic MAC address will be generated |
    /// | vlanId           | number   | No       | VLAN ID for the network adapter. If not specified, no VLAN tagging is used |
    /// | dhcpGuard        | boolean  | No       | Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages |
    /// | routerGuard      | boolean  | No       | Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages |
    /// | portMirroring    | string   | No       | Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None |
    /// | ieeePriorityTag  | boolean  | No       | Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value |
    /// | vmqWeight        | number   | No       | VMQ weight for the network adapter. A value of 0 disables VMQ |
    /// | ipAddresses      | string   | No       | Comma-separated list of IP addresses to assign to the network adapter |
    /// 
    /// ## Output Properties
    /// 
    /// | Property         | Type     | Description |
    /// |------------------|----------|-------------|
    /// | adapterId        | string   | The ID of the network adapter |
    /// 
    /// ## Lifecycle Management
    /// 
    /// - **Create**: Creates a new network adapter and attaches it to the specified virtual machine.
    /// - **Read**: Reads the properties of an existing network adapter.
    /// - **Update**: Updates the properties of an existing network adapter.
    /// - **Delete**: Removes a network adapter from a virtual machine.
    /// 
    /// ## Notes
    /// 
    /// - The network adapter creation will fail if the virtual machine or virtual switch does not exist.
    /// - Dynamic MAC addresses are automatically generated if not specified.
    /// - IP addresses are specified as a comma-separated string (e.g., "192.168.1.10,192.168.1.11").
    /// - When updating a network adapter, the virtual machine may need to be powered off depending on the properties being changed.
    /// </summary>
    [HypervResourceType("hyperv:networkadapter:NetworkAdapter")]
    public partial class NetworkAdapter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the network adapter
        /// </summary>
        [Output("adapterId")]
        public Output<string> AdapterId { get; private set; } = null!;

        /// <summary>
        /// The command to run on create.
        /// </summary>
        [Output("create")]
        public Output<string?> Create { get; private set; } = null!;

        /// <summary>
        /// The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
        /// and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
        /// Command resource from previous create or update steps.
        /// </summary>
        [Output("delete")]
        public Output<string?> Delete { get; private set; } = null!;

        /// <summary>
        /// Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
        /// </summary>
        [Output("dhcpGuard")]
        public Output<bool?> DhcpGuard { get; private set; } = null!;

        /// <summary>
        /// Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
        /// </summary>
        [Output("ieeePriorityTag")]
        public Output<bool?> IeeePriorityTag { get; private set; } = null!;

        /// <summary>
        /// Comma-separated list of IP addresses to assign to the network adapter.
        /// </summary>
        [Output("ipAddresses")]
        public Output<string?> IpAddresses { get; private set; } = null!;

        /// <summary>
        /// MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
        /// </summary>
        [Output("macAddress")]
        public Output<string?> MacAddress { get; private set; } = null!;

        /// <summary>
        /// Name of the network adapter
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
        /// </summary>
        [Output("portMirroring")]
        public Output<string?> PortMirroring { get; private set; } = null!;

        /// <summary>
        /// Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
        /// </summary>
        [Output("routerGuard")]
        public Output<bool?> RouterGuard { get; private set; } = null!;

        /// <summary>
        /// Name of the virtual switch to connect the network adapter to
        /// </summary>
        [Output("switchName")]
        public Output<string> SwitchName { get; private set; } = null!;

        /// <summary>
        /// Trigger a resource replacement on changes to any of these values. The
        /// trigger values can be of any type. If a value is different in the current update compared to the
        /// previous update, the resource will be replaced, i.e., the "create" command will be re-run.
        /// Please see the resource documentation for examples.
        /// </summary>
        [Output("triggers")]
        public Output<ImmutableArray<object>> Triggers { get; private set; } = null!;

        /// <summary>
        /// The command to run on update, if empty, create will 
        /// run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR 
        /// are set to the stdout and stderr properties of the Command resource from previous 
        /// create or update steps.
        /// </summary>
        [Output("update")]
        public Output<string?> Update { get; private set; } = null!;

        /// <summary>
        /// VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
        /// </summary>
        [Output("vlanId")]
        public Output<int?> VlanId { get; private set; } = null!;

        /// <summary>
        /// Name of the virtual machine to attach the network adapter to
        /// </summary>
        [Output("vmName")]
        public Output<string> VmName { get; private set; } = null!;

        /// <summary>
        /// VMQ weight for the network adapter. A value of 0 disables VMQ.
        /// </summary>
        [Output("vmqWeight")]
        public Output<int?> VmqWeight { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAdapter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAdapter(string name, NetworkAdapterArgs args, CustomResourceOptions? options = null)
            : base("hyperv:networkadapter:NetworkAdapter", name, args ?? new NetworkAdapterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAdapter(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("hyperv:networkadapter:NetworkAdapter", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "triggers[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAdapter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAdapter Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkAdapter(name, id, options);
        }
    }

    public sealed class NetworkAdapterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The command to run on create.
        /// </summary>
        [Input("create")]
        public Input<string>? Create { get; set; }

        /// <summary>
        /// The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
        /// and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
        /// Command resource from previous create or update steps.
        /// </summary>
        [Input("delete")]
        public Input<string>? Delete { get; set; }

        /// <summary>
        /// Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
        /// </summary>
        [Input("dhcpGuard")]
        public Input<bool>? DhcpGuard { get; set; }

        /// <summary>
        /// Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
        /// </summary>
        [Input("ieeePriorityTag")]
        public Input<bool>? IeeePriorityTag { get; set; }

        /// <summary>
        /// Comma-separated list of IP addresses to assign to the network adapter.
        /// </summary>
        [Input("ipAddresses")]
        public Input<string>? IpAddresses { get; set; }

        /// <summary>
        /// MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        /// <summary>
        /// Name of the network adapter
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
        /// </summary>
        [Input("portMirroring")]
        public Input<string>? PortMirroring { get; set; }

        /// <summary>
        /// Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
        /// </summary>
        [Input("routerGuard")]
        public Input<bool>? RouterGuard { get; set; }

        /// <summary>
        /// Name of the virtual switch to connect the network adapter to
        /// </summary>
        [Input("switchName", required: true)]
        public Input<string> SwitchName { get; set; } = null!;

        [Input("triggers")]
        private InputList<object>? _triggers;

        /// <summary>
        /// Trigger a resource replacement on changes to any of these values. The
        /// trigger values can be of any type. If a value is different in the current update compared to the
        /// previous update, the resource will be replaced, i.e., the "create" command will be re-run.
        /// Please see the resource documentation for examples.
        /// </summary>
        public InputList<object> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<object>());
            set => _triggers = value;
        }

        /// <summary>
        /// The command to run on update, if empty, create will 
        /// run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR 
        /// are set to the stdout and stderr properties of the Command resource from previous 
        /// create or update steps.
        /// </summary>
        [Input("update")]
        public Input<string>? Update { get; set; }

        /// <summary>
        /// VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        /// <summary>
        /// Name of the virtual machine to attach the network adapter to
        /// </summary>
        [Input("vmName", required: true)]
        public Input<string> VmName { get; set; } = null!;

        /// <summary>
        /// VMQ weight for the network adapter. A value of 0 disables VMQ.
        /// </summary>
        [Input("vmqWeight")]
        public Input<int>? VmqWeight { get; set; }

        public NetworkAdapterArgs()
        {
        }
        public static new NetworkAdapterArgs Empty => new NetworkAdapterArgs();
    }
}
