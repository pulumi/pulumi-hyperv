// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hyperv.Networkadapter.Inputs
{

    public sealed class NetworkAdapterInputsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The command to run on create.
        /// </summary>
        [Input("create")]
        public Input<string>? Create { get; set; }

        /// <summary>
        /// The command to run on delete. The environment variables PULUMI_COMMAND_STDOUT
        /// and PULUMI_COMMAND_STDERR are set to the stdout and stderr properties of the
        /// Command resource from previous create or update steps.
        /// </summary>
        [Input("delete")]
        public Input<string>? Delete { get; set; }

        /// <summary>
        /// Enable DHCP Guard. Prevents the virtual machine from broadcasting DHCP server messages.
        /// </summary>
        [Input("dhcpGuard")]
        public Input<bool>? DhcpGuard { get; set; }

        /// <summary>
        /// Enable IEEE Priority Tagging. Allows the virtual machine to tag outgoing network traffic with an IEEE 802.1p priority value.
        /// </summary>
        [Input("ieeePriorityTag")]
        public Input<bool>? IeeePriorityTag { get; set; }

        /// <summary>
        /// Comma-separated list of IP addresses to assign to the network adapter.
        /// </summary>
        [Input("ipAddresses")]
        public Input<string>? IpAddresses { get; set; }

        /// <summary>
        /// MAC address for the network adapter. If not specified, a dynamic MAC address will be generated.
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        /// <summary>
        /// Name of the network adapter
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Port mirroring mode. Valid values are None, Source, Destination, and Both. Defaults to None.
        /// </summary>
        [Input("portMirroring")]
        public Input<string>? PortMirroring { get; set; }

        /// <summary>
        /// Enable Router Guard. Prevents the virtual machine from broadcasting router advertisement and discovery messages.
        /// </summary>
        [Input("routerGuard")]
        public Input<bool>? RouterGuard { get; set; }

        /// <summary>
        /// Name of the virtual switch to connect the network adapter to
        /// </summary>
        [Input("switchName", required: true)]
        public Input<string> SwitchName { get; set; } = null!;

        [Input("triggers")]
        private InputList<object>? _triggers;

        /// <summary>
        /// Trigger a resource replacement on changes to any of these values. The
        /// trigger values can be of any type. If a value is different in the current update compared to the
        /// previous update, the resource will be replaced, i.e., the "create" command will be re-run.
        /// Please see the resource documentation for examples.
        /// </summary>
        public InputList<object> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<object>());
            set => _triggers = value;
        }

        /// <summary>
        /// The command to run on update, if empty, create will 
        /// run again. The environment variables PULUMI_COMMAND_STDOUT and PULUMI_COMMAND_STDERR 
        /// are set to the stdout and stderr properties of the Command resource from previous 
        /// create or update steps.
        /// </summary>
        [Input("update")]
        public Input<string>? Update { get; set; }

        /// <summary>
        /// VLAN ID for the network adapter. If not specified, no VLAN tagging is used.
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        /// <summary>
        /// Name of the virtual machine to attach the network adapter to
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        /// <summary>
        /// VMQ weight for the network adapter. A value of 0 disables VMQ.
        /// </summary>
        [Input("vmqWeight")]
        public Input<int>? VmqWeight { get; set; }

        public NetworkAdapterInputsArgs()
        {
        }
        public static new NetworkAdapterInputsArgs Empty => new NetworkAdapterInputsArgs();
    }
}
